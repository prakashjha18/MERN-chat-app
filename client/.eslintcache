[{"/home/prakash/Desktop/jsproj/mern_chat/client/src/index.js":"1","/home/prakash/Desktop/jsproj/mern_chat/client/src/App.js":"2","/home/prakash/Desktop/jsproj/mern_chat/client/src/reportWebVitals.js":"3","/home/prakash/Desktop/jsproj/mern_chat/client/src/UserContext.js":"4","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/chat/Chat.js":"5","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/home/Home.js":"6","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/layout/Navbar.js":"7","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/home/RoomList.js":"8","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/home/Room.js":"9","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/chat/messages/Messages.js":"10","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/chat/message/Message.js":"11","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/chat/input/Input.js":"12","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/auth/Login.js":"13","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/auth/Signup.js":"14","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/layout/SignedInMenu.js":"15","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/layout/SignedOutMenu.js":"16"},{"size":500,"mtime":1611650216679,"results":"17","hashOfConfig":"18"},{"size":1359,"mtime":1621012921716,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1611650216679,"results":"20","hashOfConfig":"18"},{"size":86,"mtime":1611650340223,"results":"21","hashOfConfig":"18"},{"size":1523,"mtime":1621012921716,"results":"22","hashOfConfig":"18"},{"size":2395,"mtime":1621016119260,"results":"23","hashOfConfig":"18"},{"size":1262,"mtime":1621012921716,"results":"24","hashOfConfig":"18"},{"size":414,"mtime":1611742308671,"results":"25","hashOfConfig":"18"},{"size":314,"mtime":1611685086279,"results":"26","hashOfConfig":"18"},{"size":417,"mtime":1611749802269,"results":"27","hashOfConfig":"18"},{"size":657,"mtime":1611749340798,"results":"28","hashOfConfig":"18"},{"size":595,"mtime":1611748442760,"results":"29","hashOfConfig":"18"},{"size":2874,"mtime":1621012921716,"results":"30","hashOfConfig":"18"},{"size":3012,"mtime":1621012921716,"results":"31","hashOfConfig":"18"},{"size":173,"mtime":1611777667823,"results":"32","hashOfConfig":"18"},{"size":230,"mtime":1611771469621,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"iia41y",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/prakash/Desktop/jsproj/mern_chat/client/src/index.js",[],["72","73"],"/home/prakash/Desktop/jsproj/mern_chat/client/src/App.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/reportWebVitals.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/UserContext.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/components/chat/Chat.js",["74","75","76","77","78"],"import React, { useContext, useEffect, useState } from 'react'\nimport { UserContext } from '../../UserContext'\nimport { Link, useParams, Redirect } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport Messages from './messages/Messages'\nimport Input from './input/Input'\nimport './Chat.css';\nlet socket\n\nconst Chat = () => {\n  const ENDPT = 'localhost:5000'\n\n  const { user, setUser } = useContext(UserContext)\n  let { room_id, room_name } = useParams()\n  const [message, setMessage] = useState('')\n  const [messages, setMessages] = useState([])\n\n  useEffect(() => {\n    socket = io(ENDPT)\n    socket.emit('join', { name: user.name, room_id, user_id: user._id })\n  }, [])\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages([...messages, message])\n    })\n  }, [messages])\n  useEffect(() => {\n    socket.emit('get-messages-history', room_id)\n    socket.on('output-messages', (messages) => {\n      setMessages(messages)\n    })\n  }, [])\n  const sendMessage = (event) => {\n    event.preventDefault()\n    if (message) {\n      console.log(message)\n      socket.emit('sendMessage', message, room_id, () => setMessage(''))\n    }\n  }\n  if (!user) {\n    return <Redirect to='/login' />\n  }\n  return (\n    <div className=\"outerContainer\">\n      <div className=\"container\">\n      <Messages messages={messages} user_id={user._id} />\n      <Input\n        message={message}\n        setMessage={setMessage}\n        sendMessage={sendMessage}\n      />\n      </div>\n    </div>\n  )\n}\n\nexport default Chat\n","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/home/Home.js",["79"],"import React, { useContext, useState, useEffect } from 'react'\nimport { UserContext } from '../../UserContext'\nimport { Redirect } from 'react-router-dom'\nimport RoomList from './RoomList'\nimport io from 'socket.io-client'\nlet socket\nconst Home = () => {\n  const ENDPT = 'localhost:5001'\n\n  const { user, setUser } = useContext(UserContext)\n  const [room, setRoom] = useState('')\n  const [rooms, setRooms] = useState([])\n  useEffect(() => {\n    socket = io(ENDPT)\n    return () => {\n      socket.emit('disconnect')\n      socket.off()\n    }\n  }, [ENDPT])\n  useEffect(() => {\n    console.log(rooms)\n  }, [rooms])\n  useEffect(() => {\n    socket.on('output-rooms', (rooms) => {\n      setRooms(rooms)\n    })\n  }, [])\n  useEffect(() => {\n    socket.on('room-created', (room) => {\n      setRooms([...rooms, room])\n    })\n  }, [rooms])\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    socket.emit('create-room', room)\n    console.log(room)\n    setRoom('')\n  }\n\n\n  if (!user) {\n    return <Redirect to='/login' />\n  }\n  return (\n    <div>\n      <div className='row'>\n        <div className='col s12 m6'>\n          <div className='card blue-grey darken-1'>\n            <div className='card-content white-text'>\n              <span className='card-title'>\n                welcome {user ? user.name : ''}\n              </span>\n\n              <div className='row'>\n                <form onSubmit={handleSubmit}>\n                  <div className='row'>\n                    <div className='input-field col s12'>\n                      <input\n                        placeholder='Enter a room name'\n                        id='room'\n                        type='text'\n                        value={room}\n                        onChange={(e) => setRoom(e.target.value)}\n                        className='validate'\n                      />\n                      <label htmlFor='room'>room</label>\n                    </div>\n                  </div>\n                  <button className='btn'>Create room</button>\n                </form>\n              </div>\n            </div>\n            <div className='card-action'>\n              \n            </div>\n          </div>\n        </div>\n        <div className='col s6 m5 offset-1'>\n          <RoomList rooms={rooms} />\n          {console.log(room,rooms,user,\"dfihufydufyiuyfdiyfdisyf\")}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/layout/Navbar.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/components/home/RoomList.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/components/home/Room.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/components/chat/messages/Messages.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/components/chat/message/Message.js",[],["80","81"],"/home/prakash/Desktop/jsproj/mern_chat/client/src/components/chat/input/Input.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/components/auth/Login.js",["82","83"],"import React, { useState, useContext } from 'react'\nimport { UserContext } from '../../UserContext';\nimport { Redirect } from 'react-router-dom';\nconst Login = () => {\n    const { user, setUser } = useContext(UserContext);\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [nameError, setNameError] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n    const submitHandler = async e => {\n        e.preventDefault();\n        setEmailError('');\n        setNameError('');\n        setPasswordError('');\n        console.log(name, email, password)\n        try {\n            const res = await fetch('http://localhost:5000/login', {\n                method: 'POST',\n                credentials: 'include',\n                body: JSON.stringify({ name, email, password }),\n                headers: { 'Content-Type': 'application/json' }\n            });\n            const data = await res.json();\n            console.log(data)\n            if (data.errors) {\n                setEmailError(data.errors.email);\n                setNameError(data.errors.name);\n                setPasswordError(data.errors.password);\n\n            }\n            if (data.user) {\n                setUser(data.user)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    if (user) {\n        return <Redirect to=\"/\" />\n    }\n    return (\n        <>\n        <br/>\n        <div className='container'>\n        <div className=\"row\">\n            <h2>Login</h2>\n            <form className=\"col s12\" onSubmit={submitHandler}>\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"email\" type=\"email\" className=\"validate\"\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n                        <div className=\"email error red-text\">{emailError}</div>\n                        <label htmlFor=\"email\">Email</label>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field col s12\">\n                        <input id=\"password\" type=\"password\" className=\"validate\"\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                        />\n                        <div className=\"password error red-text\">{passwordError}</div>\n                        <label htmlFor=\"password\">Password</label>\n                    </div>\n                </div>\n\n                <button className=\"btn\">Login</button>\n            </form>\n        </div>\n        </div>\n       \n        </>\n\n    )\n}\n\nexport default Login\n","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/auth/Signup.js",[],"/home/prakash/Desktop/jsproj/mern_chat/client/src/components/layout/SignedInMenu.js",["84"],"import React from 'react'\n\nconst SignedInMenu = ({ logout }) => {\n    return (\n        <li onClick={logout}><a href=\"#\">Logout</a></li>\n    )\n}\n\nexport default SignedInMenu\n","/home/prakash/Desktop/jsproj/mern_chat/client/src/components/layout/SignedOutMenu.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":14},{"ruleId":"89","severity":1,"message":"93","line":13,"column":17,"nodeType":"91","messageId":"92","endLine":13,"endColumn":24},{"ruleId":"89","severity":1,"message":"94","line":14,"column":18,"nodeType":"91","messageId":"92","endLine":14,"endColumn":27},{"ruleId":"95","severity":1,"message":"96","line":21,"column":6,"nodeType":"97","endLine":21,"endColumn":8,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":32,"column":6,"nodeType":"97","endLine":32,"endColumn":8,"suggestions":"100"},{"ruleId":"89","severity":1,"message":"93","line":10,"column":17,"nodeType":"91","messageId":"92","endLine":10,"endColumn":24},{"ruleId":"85","replacedBy":"101"},{"ruleId":"87","replacedBy":"102"},{"ruleId":"89","severity":1,"message":"103","line":7,"column":18,"nodeType":"91","messageId":"92","endLine":7,"endColumn":25},{"ruleId":"89","severity":1,"message":"104","line":10,"column":12,"nodeType":"91","messageId":"92","endLine":10,"endColumn":21},{"ruleId":"105","severity":1,"message":"106","line":5,"column":30,"nodeType":"107","endLine":5,"endColumn":42},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","'room_name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room_id', 'user._id', and 'user.name'. Either include them or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'room_id'. Either include it or remove the dependency array.",["111"],["108"],["109"],"'setName' is assigned a value but never used.","'nameError' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [room_id, user._id, user.name]",{"range":"116","text":"117"},"Update the dependencies array to be: [room_id]",{"range":"118","text":"119"},[680,682],"[room_id, user._id, user.name]",[968,970],"[room_id]"]